{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_define_property.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $cd5a47cf8ef6d766$export$71511d61b312f219(obj, key, value) {\n    if (key in obj) Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n    });\n    else obj[key] = value;\n    return obj;\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : Game.defaultInitialState;\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.board = initialState.map(function(row) {\n            return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n        });\n        this.score = 0;\n        this.status = Game.GameStatus.idle;\n        this.initialState = initialState.map(function(row) {\n            return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n        });\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.board;\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                this.status = Game.GameStatus.playing;\n                this.newCell();\n                this.newCell();\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.status = Game.GameStatus.idle;\n                this.score = 0;\n                this.board = this.initialState.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n            }\n        },\n        {\n            key: \"newCell\",\n            value: function newCell() {\n                var emptyCells = [];\n                for(var y = 0; y < 4; y++){\n                    for(var x = 0; x < 4; x++)if (!this.board[y][x]) emptyCells.push({\n                        y: y,\n                        x: x\n                    });\n                }\n                if (emptyCells.length > 0) {\n                    var val = Math.floor(Math.random() * emptyCells.length);\n                    this.board[emptyCells[val].y][emptyCells[val].x] = Math.random() < 0.9 ? 2 : 4;\n                }\n            }\n        },\n        {\n            key: \"checkGameState\",\n            value: function checkGameState() {\n                if (this.board.find(function(row) {\n                    return row.find(function(el) {\n                        return el === 2048;\n                    });\n                })) this.status = Game.GameStatus.win;\n                else if (this.checkIfLose()) this.status = Game.GameStatus.lose;\n            }\n        },\n        {\n            key: \"checkIfLose\",\n            value: function checkIfLose() {\n                if (this.board.find(function(row) {\n                    return row.includes(0);\n                })) return false;\n                for(var y = 0; y < 4; y++)for(var x = 0; x < 4; x++){\n                    if (y < 3 && this.board[y][x] === this.board[y + 1][x]) return false;\n                    if (x < 3 && this.board[y][x] === this.board[y][x + 1]) return false;\n                }\n                return true;\n            }\n        },\n        {\n            key: \"move\",\n            value: function move(direction) {\n                var _this = this;\n                if (this.status !== \"playing\") return false;\n                // const rows = document.querySelectorAll('tr');\n                var hasChanged = false;\n                var merged = Array.from({\n                    length: 4\n                }, function() {\n                    return [\n                        false,\n                        false,\n                        false,\n                        false\n                    ];\n                });\n                // Helper function for moving and merging cells without reusing 'direction'\n                var moveCell = function(startY, startX, deltaY, deltaX, cssClass) {\n                    if (_this.board[startY][startX] !== 0) {\n                        var newY = startY;\n                        var newX = startX;\n                        // let moveDistance = 0;\n                        // Move the cell as far as possible\n                        while(newY + deltaY >= 0 && newY + deltaY < 4 && newX + deltaX >= 0 && newX + deltaX < 4 && _this.board[newY + deltaY][newX + deltaX] === 0){\n                            newY += deltaY;\n                            newX += deltaX;\n                        // moveDistance++;\n                        }\n                        // const cellElement = rows[startY].cells[startX].firstChild;\n                        // Check if a merge is possible\n                        if (newY + deltaY >= 0 && newY + deltaY < 4 && newX + deltaX >= 0 && newX + deltaX < 4 && _this.board[newY + deltaY][newX + deltaX] === _this.board[startY][startX] && !merged[newY + deltaY][newX + deltaX]) {\n                            // Merge cells\n                            _this.board[newY + deltaY][newX + deltaX] *= 2;\n                            _this.score += _this.board[newY + deltaY][newX + deltaX];\n                            _this.board[startY][startX] = 0;\n                            merged[newY + deltaY][newX + deltaX] = true;\n                            hasChanged = true;\n                        // Apply animation for merging\n                        // if (cellElement) {\n                        //  cellElement.classList.add(`${cssClass}--${moveDistance + 1}`);\n                        // }\n                        } else if (newY !== startY || newX !== startX) {\n                            // Move without merging\n                            _this.board[newY][newX] = _this.board[startY][startX];\n                            _this.board[startY][startX] = 0;\n                            hasChanged = true;\n                        // Apply animation for movement\n                        // if (cellElement) {\n                        //   cellElement.classList.add(`${cssClass}--${moveDistance}`);\n                        // }\n                        }\n                    }\n                };\n                // Logic for moving in the correct direction\n                if (direction === \"up\") {\n                    for(var x = 0; x < 4; x++)for(var y = 1; y < 4; y++)moveCell(y, x, -1, 0, \"move-up\");\n                } else if (direction === \"down\") {\n                    for(var x1 = 0; x1 < 4; x1++)for(var y1 = 2; y1 >= 0; y1--)moveCell(y1, x1, 1, 0, \"move-down\");\n                } else if (direction === \"left\") {\n                    for(var y2 = 0; y2 < 4; y2++)for(var x2 = 1; x2 < 4; x2++)moveCell(y2, x2, 0, -1, \"move-left\");\n                } else if (direction === \"right\") {\n                    for(var y3 = 0; y3 < 4; y3++)for(var x3 = 2; x3 >= 0; x3--)moveCell(y3, x3, 0, 1, \"move-right\");\n                }\n                if (hasChanged) {\n                    this.newCell();\n                    this.checkGameState();\n                }\n                return hasChanged;\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                return this.move(\"up\");\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                return this.move(\"down\");\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                return this.move(\"left\");\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                return this.move(\"right\");\n            }\n        }\n    ]);\n    return Game;\n}();\n(0, $cd5a47cf8ef6d766$export$71511d61b312f219)($3d28d7f1aac198f5$var$Game, \"defaultInitialState\", [\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ]\n]);\n(0, $cd5a47cf8ef6d766$export$71511d61b312f219)($3d28d7f1aac198f5$var$Game, \"GameStatus\", {\n    idle: \"idle\",\n    playing: \"playing\",\n    win: \"win\",\n    lose: \"lose\"\n});\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$button = document.querySelector(\".button\");\nvar $197cd56b15c33885$var$score = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$rows = document.querySelectorAll(\"tr\");\nvar $197cd56b15c33885$var$messageStart = document.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$messageLose = document.querySelector(\".message-lose\");\nvar $197cd56b15c33885$var$messageWin = document.querySelector(\".message-win\");\n$197cd56b15c33885$var$button.addEventListener(\"click\", function() {\n    if ($197cd56b15c33885$var$game.getStatus() === $3d28d7f1aac198f5$exports.GameStatus.idle) {\n        $197cd56b15c33885$var$button.textContent = \"Restart\";\n        $197cd56b15c33885$var$button.classList.add(\"restart\");\n        $197cd56b15c33885$var$button.classList.remove(\"start\");\n        $197cd56b15c33885$var$messageStart.classList.add(\"hidden\");\n        $197cd56b15c33885$var$game.start();\n    } else {\n        $197cd56b15c33885$var$button.textContent = \"Start\";\n        $197cd56b15c33885$var$button.classList.add(\"start\");\n        $197cd56b15c33885$var$button.classList.remove(\"restart\");\n        $197cd56b15c33885$var$messageWin.classList.add(\"hidden\");\n        $197cd56b15c33885$var$messageLose.classList.add(\"hidden\");\n        $197cd56b15c33885$var$messageStart.classList.remove(\"hidden\");\n        $197cd56b15c33885$var$game.restart();\n    }\n    $197cd56b15c33885$var$drawBoard();\n});\ndocument.addEventListener(\"keydown\", function(eventKey) {\n    var canMove = false;\n    if ($197cd56b15c33885$var$game.getStatus() === \"playing\") {\n        switch(eventKey.key){\n            case \"ArrowUp\":\n                canMove = $197cd56b15c33885$var$game.moveUp();\n                break;\n            case \"ArrowDown\":\n                canMove = $197cd56b15c33885$var$game.moveDown();\n                break;\n            case \"ArrowLeft\":\n                canMove = $197cd56b15c33885$var$game.moveLeft();\n                break;\n            case \"ArrowRight\":\n                canMove = $197cd56b15c33885$var$game.moveRight();\n                break;\n        }\n        if (canMove) setTimeout(function() {\n            $197cd56b15c33885$var$drawBoard();\n            $197cd56b15c33885$var$updateMessage();\n        }, 300);\n    }\n});\nfunction $197cd56b15c33885$var$drawBoard() {\n    $197cd56b15c33885$var$score.textContent = $197cd56b15c33885$var$game.getScore();\n    var board = $197cd56b15c33885$var$game.getState();\n    for(var y = 0; y < 4; y++)for(var x = 0; x < 4; x++){\n        var cell = $197cd56b15c33885$var$rows[y].cells[x];\n        if (board[y][x] === 0) {\n            if (cell.firstChild) cell.removeChild(cell.firstChild);\n        } else if (!cell.firstChild || cell.firstChild.textContent !== board[y][x]) {\n            cell.innerHTML = \"\";\n            var div = document.createElement(\"div\");\n            div.className = \"field-cell-num field-cell--\".concat(board[y][x]);\n            div.textContent = board[y][x];\n            cell.appendChild(div);\n        }\n    }\n}\nfunction $197cd56b15c33885$var$updateMessage() {\n    var gameStatus = $197cd56b15c33885$var$game.getStatus();\n    if (gameStatus === $3d28d7f1aac198f5$exports.GameStatus.win) $197cd56b15c33885$var$messageWin.classList.remove(\"hidden\");\n    else if (gameStatus === $3d28d7f1aac198f5$exports.GameStatus.lose) $197cd56b15c33885$var$messageLose.classList.remove(\"hidden\");\n}\n\n})();\n//# sourceMappingURL=index.483f2b24.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nconst button = document.querySelector('.button');\nconst score = document.querySelector('.game-score');\n\nconst rows = document.querySelectorAll('tr');\n\nconst messageStart = document.querySelector('.message-start');\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\n\nbutton.addEventListener('click', () => {\n  if (game.getStatus() === Game.GameStatus.idle) {\n    button.textContent = 'Restart';\n    button.classList.add('restart');\n    button.classList.remove('start');\n\n    messageStart.classList.add('hidden');\n\n    game.start();\n  } else {\n    button.textContent = 'Start';\n    button.classList.add('start');\n    button.classList.remove('restart');\n\n    messageWin.classList.add('hidden');\n    messageLose.classList.add('hidden');\n    messageStart.classList.remove('hidden');\n\n    game.restart();\n  }\n  drawBoard();\n});\n\ndocument.addEventListener('keydown', (eventKey) => {\n  let canMove = false;\n\n  if (game.getStatus() === 'playing') {\n    switch (eventKey.key) {\n      case 'ArrowUp':\n        canMove = game.moveUp();\n        break;\n      case 'ArrowDown':\n        canMove = game.moveDown();\n        break;\n      case 'ArrowLeft':\n        canMove = game.moveLeft();\n        break;\n      case 'ArrowRight':\n        canMove = game.moveRight();\n        break;\n    }\n\n    if (canMove) {\n      setTimeout(() => {\n        drawBoard();\n        updateMessage();\n      }, 300);\n    }\n  }\n});\n\nfunction drawBoard() {\n  score.textContent = game.getScore();\n\n  const board = game.getState();\n\n  for (let y = 0; y < 4; y++) {\n    for (let x = 0; x < 4; x++) {\n      const cell = rows[y].cells[x];\n\n      if (board[y][x] === 0) {\n        if (cell.firstChild) {\n          cell.removeChild(cell.firstChild);\n        }\n      } else {\n        if (!cell.firstChild || cell.firstChild.textContent !== board[y][x]) {\n          cell.innerHTML = '';\n\n          const div = document.createElement('div');\n\n          div.className = `field-cell-num field-cell--${board[y][x]}`;\n          div.textContent = board[y][x];\n\n          cell.appendChild(div);\n        }\n      }\n    }\n  }\n}\n\nfunction updateMessage() {\n  const gameStatus = game.getStatus();\n\n  if (gameStatus === Game.GameStatus.win) {\n    messageWin.classList.remove('hidden');\n  } else if (gameStatus === Game.GameStatus.lose) {\n    messageLose.classList.remove('hidden');\n  }\n}\n","'use strict';\n\nclass Game {\n  static defaultInitialState = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  static GameStatus = {\n    idle: 'idle',\n    playing: 'playing',\n    win: 'win',\n    lose: 'lose',\n  };\n\n  constructor(initialState = Game.defaultInitialState) {\n    this.board = initialState.map((row) => [...row]);\n    this.score = 0;\n    this.status = Game.GameStatus.idle;\n    this.initialState = initialState.map((row) => [...row]);\n  }\n\n  getState() {\n    return this.board;\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  start() {\n    this.status = Game.GameStatus.playing;\n    this.newCell();\n    this.newCell();\n  }\n\n  restart() {\n    this.status = Game.GameStatus.idle;\n    this.score = 0;\n\n    this.board = this.initialState.map((row) => [...row]);\n  }\n\n  newCell() {\n    const emptyCells = [];\n\n    for (let y = 0; y < 4; y++) {\n      for (let x = 0; x < 4; x++) {\n        if (!this.board[y][x]) {\n          emptyCells.push({ y: y, x: x });\n        }\n      }\n    }\n\n    if (emptyCells.length > 0) {\n      const val = Math.floor(Math.random() * emptyCells.length);\n\n      this.board[emptyCells[val].y][emptyCells[val].x] =\n        Math.random() < 0.9 ? 2 : 4;\n    }\n  }\n\n  checkGameState() {\n    if (this.board.find((row) => row.find((el) => el === 2048))) {\n      this.status = Game.GameStatus.win;\n    } else if (this.checkIfLose()) {\n      this.status = Game.GameStatus.lose;\n    }\n  }\n\n  checkIfLose() {\n    if (this.board.find((row) => row.includes(0))) {\n      return false;\n    }\n\n    for (let y = 0; y < 4; y++) {\n      for (let x = 0; x < 4; x++) {\n        if (y < 3 && this.board[y][x] === this.board[y + 1][x]) {\n          return false;\n        }\n\n        if (x < 3 && this.board[y][x] === this.board[y][x + 1]) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  move(direction) {\n    if (this.status !== 'playing') {\n      return false;\n    }\n\n    // const rows = document.querySelectorAll('tr');\n    let hasChanged = false;\n    const merged = Array.from({ length: 4 }, () => [\n      false,\n      false,\n      false,\n      false,\n    ]);\n\n    // Helper function for moving and merging cells without reusing 'direction'\n    const moveCell = (startY, startX, deltaY, deltaX, cssClass) => {\n      if (this.board[startY][startX] !== 0) {\n        let newY = startY;\n        let newX = startX;\n        // let moveDistance = 0;\n\n        // Move the cell as far as possible\n        while (\n          newY + deltaY >= 0 &&\n          newY + deltaY < 4 &&\n          newX + deltaX >= 0 &&\n          newX + deltaX < 4 &&\n          this.board[newY + deltaY][newX + deltaX] === 0\n        ) {\n          newY += deltaY;\n          newX += deltaX;\n          // moveDistance++;\n        }\n\n        // const cellElement = rows[startY].cells[startX].firstChild;\n\n        // Check if a merge is possible\n        if (\n          newY + deltaY >= 0 &&\n          newY + deltaY < 4 &&\n          newX + deltaX >= 0 &&\n          newX + deltaX < 4 &&\n          this.board[newY + deltaY][newX + deltaX] ===\n            this.board[startY][startX] &&\n          !merged[newY + deltaY][newX + deltaX]\n        ) {\n          // Merge cells\n          this.board[newY + deltaY][newX + deltaX] *= 2;\n          this.score += this.board[newY + deltaY][newX + deltaX];\n          this.board[startY][startX] = 0;\n          merged[newY + deltaY][newX + deltaX] = true;\n          hasChanged = true;\n\n          // Apply animation for merging\n          // if (cellElement) {\n          //  cellElement.classList.add(`${cssClass}--${moveDistance + 1}`);\n          // }\n        } else if (newY !== startY || newX !== startX) {\n          // Move without merging\n          this.board[newY][newX] = this.board[startY][startX];\n          this.board[startY][startX] = 0;\n          hasChanged = true;\n\n          // Apply animation for movement\n          // if (cellElement) {\n          //   cellElement.classList.add(`${cssClass}--${moveDistance}`);\n          // }\n        }\n      }\n    };\n\n    // Logic for moving in the correct direction\n    if (direction === 'up') {\n      for (let x = 0; x < 4; x++) {\n        for (let y = 1; y < 4; y++) {\n          moveCell(y, x, -1, 0, 'move-up');\n        }\n      }\n    } else if (direction === 'down') {\n      for (let x = 0; x < 4; x++) {\n        for (let y = 2; y >= 0; y--) {\n          moveCell(y, x, 1, 0, 'move-down');\n        }\n      }\n    } else if (direction === 'left') {\n      for (let y = 0; y < 4; y++) {\n        for (let x = 1; x < 4; x++) {\n          moveCell(y, x, 0, -1, 'move-left');\n        }\n      }\n    } else if (direction === 'right') {\n      for (let y = 0; y < 4; y++) {\n        for (let x = 2; x >= 0; x--) {\n          moveCell(y, x, 0, 1, 'move-right');\n        }\n      }\n    }\n\n    if (hasChanged) {\n      this.newCell();\n      this.checkGameState();\n    }\n\n    return hasChanged;\n  }\n\n  moveUp() {\n    return this.move('up');\n  }\n\n  moveDown() {\n    return this.move('down');\n  }\n\n  moveLeft() {\n    return this.move('left');\n  }\n\n  moveRight() {\n    return this.move('right');\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","function _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n    } else obj[key] = value;\n\n    return obj;\n}\nexport { _define_property as _ };\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n"],"names":["$3d28d7f1aac198f5$exports","$cd5a47cf8ef6d766$export$71511d61b312f219","obj","key","value","Object","defineProperty","enumerable","configurable","writable","$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$227c6742e0ff6f82$export$71511d61b312f219","isArray","iter","Symbol","iterator","from","o","minLen","n","prototype","toString","call","slice","constructor","name","test","TypeError","$3d28d7f1aac198f5$var$Game","protoProps","Game","initialState","arguments","defaultInitialState","instance","Constructor","board","map","row","score","status","GameStatus","idle","playing","newCell","emptyCells","y","x","push","val","Math","floor","random","find","el","win","checkIfLose","lose","includes","direction","_this","hasChanged","merged","moveCell","startY","startX","deltaY","deltaX","cssClass","newY","newX","x1","y1","y2","x2","y3","x3","checkGameState","move","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","$197cd56b15c33885$var$game","$197cd56b15c33885$var$button","document","querySelector","$197cd56b15c33885$var$score","$197cd56b15c33885$var$rows","querySelectorAll","$197cd56b15c33885$var$messageStart","$197cd56b15c33885$var$messageLose","$197cd56b15c33885$var$messageWin","$197cd56b15c33885$var$drawBoard","textContent","getScore","getState","cell","cells","firstChild","removeChild","innerHTML","div","createElement","className","concat","appendChild","addEventListener","getStatus","classList","add","remove","start","restart","eventKey","canMove","moveUp","moveDown","moveLeft","moveRight","setTimeout","gameStatus"],"version":3,"file":"index.483f2b24.js.map"}